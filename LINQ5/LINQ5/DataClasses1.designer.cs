#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LINQ5
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ejercicio")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void Insertusuarios(usuarios instance);
    partial void Updateusuarios(usuarios instance);
    partial void Deleteusuarios(usuarios instance);
    partial void Inserttrabajador(trabajador instance);
    partial void Updatetrabajador(trabajador instance);
    partial void Deletetrabajador(trabajador instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::LINQ5.Properties.Settings.Default.LinqString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<usuarios> usuarios
		{
			get
			{
				return this.GetTable<usuarios>();
			}
		}
		
		public System.Data.Linq.Table<trabajador> trabajador
		{
			get
			{
				return this.GetTable<trabajador>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.usuarios")]
	public partial class usuarios : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _usuario;
		
		private string _passwd;
		
		private string _estado;
		
		private string _tipo_usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnusuarioChanging(string value);
    partial void OnusuarioChanged();
    partial void OnpasswdChanging(string value);
    partial void OnpasswdChanged();
    partial void OnestadoChanging(string value);
    partial void OnestadoChanged();
    partial void Ontipo_usuarioChanging(string value);
    partial void Ontipo_usuarioChanged();
    #endregion
		
		public usuarios()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usuario", DbType="NChar(10)")]
		public string usuario
		{
			get
			{
				return this._usuario;
			}
			set
			{
				if ((this._usuario != value))
				{
					this.OnusuarioChanging(value);
					this.SendPropertyChanging();
					this._usuario = value;
					this.SendPropertyChanged("usuario");
					this.OnusuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_passwd", DbType="NChar(10)")]
		public string passwd
		{
			get
			{
				return this._passwd;
			}
			set
			{
				if ((this._passwd != value))
				{
					this.OnpasswdChanging(value);
					this.SendPropertyChanging();
					this._passwd = value;
					this.SendPropertyChanged("passwd");
					this.OnpasswdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estado", DbType="NChar(10)")]
		public string estado
		{
			get
			{
				return this._estado;
			}
			set
			{
				if ((this._estado != value))
				{
					this.OnestadoChanging(value);
					this.SendPropertyChanging();
					this._estado = value;
					this.SendPropertyChanged("estado");
					this.OnestadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tipo_usuario", DbType="NChar(20)")]
		public string tipo_usuario
		{
			get
			{
				return this._tipo_usuario;
			}
			set
			{
				if ((this._tipo_usuario != value))
				{
					this.Ontipo_usuarioChanging(value);
					this.SendPropertyChanging();
					this._tipo_usuario = value;
					this.SendPropertyChanged("tipo_usuario");
					this.Ontipo_usuarioChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.trabajador")]
	public partial class trabajador : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_trabajador;
		
		private string _nombre;
		
		private string _apellido_pat;
		
		private string _apellido_mat;
		
		private string _direccion;
		
		private string _telefono;
		
		private int _num_empleado;
		
		private int _id_usuario;
		
		private int _id_puesto;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_trabajadorChanging(int value);
    partial void Onid_trabajadorChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void Onapellido_patChanging(string value);
    partial void Onapellido_patChanged();
    partial void Onapellido_matChanging(string value);
    partial void Onapellido_matChanged();
    partial void OndireccionChanging(string value);
    partial void OndireccionChanged();
    partial void OntelefonoChanging(string value);
    partial void OntelefonoChanged();
    partial void Onnum_empleadoChanging(int value);
    partial void Onnum_empleadoChanged();
    partial void Onid_usuarioChanging(int value);
    partial void Onid_usuarioChanged();
    partial void Onid_puestoChanging(int value);
    partial void Onid_puestoChanged();
    #endregion
		
		public trabajador()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_trabajador", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_trabajador
		{
			get
			{
				return this._id_trabajador;
			}
			set
			{
				if ((this._id_trabajador != value))
				{
					this.Onid_trabajadorChanging(value);
					this.SendPropertyChanging();
					this._id_trabajador = value;
					this.SendPropertyChanged("id_trabajador");
					this.Onid_trabajadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apellido_pat", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string apellido_pat
		{
			get
			{
				return this._apellido_pat;
			}
			set
			{
				if ((this._apellido_pat != value))
				{
					this.Onapellido_patChanging(value);
					this.SendPropertyChanging();
					this._apellido_pat = value;
					this.SendPropertyChanged("apellido_pat");
					this.Onapellido_patChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apellido_mat", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string apellido_mat
		{
			get
			{
				return this._apellido_mat;
			}
			set
			{
				if ((this._apellido_mat != value))
				{
					this.Onapellido_matChanging(value);
					this.SendPropertyChanging();
					this._apellido_mat = value;
					this.SendPropertyChanged("apellido_mat");
					this.Onapellido_matChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_direccion", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string direccion
		{
			get
			{
				return this._direccion;
			}
			set
			{
				if ((this._direccion != value))
				{
					this.OndireccionChanging(value);
					this.SendPropertyChanging();
					this._direccion = value;
					this.SendPropertyChanged("direccion");
					this.OndireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefono", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string telefono
		{
			get
			{
				return this._telefono;
			}
			set
			{
				if ((this._telefono != value))
				{
					this.OntelefonoChanging(value);
					this.SendPropertyChanging();
					this._telefono = value;
					this.SendPropertyChanged("telefono");
					this.OntelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_num_empleado", DbType="Int NOT NULL")]
		public int num_empleado
		{
			get
			{
				return this._num_empleado;
			}
			set
			{
				if ((this._num_empleado != value))
				{
					this.Onnum_empleadoChanging(value);
					this.SendPropertyChanging();
					this._num_empleado = value;
					this.SendPropertyChanged("num_empleado");
					this.Onnum_empleadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_usuario", DbType="Int NOT NULL")]
		public int id_usuario
		{
			get
			{
				return this._id_usuario;
			}
			set
			{
				if ((this._id_usuario != value))
				{
					this.Onid_usuarioChanging(value);
					this.SendPropertyChanging();
					this._id_usuario = value;
					this.SendPropertyChanged("id_usuario");
					this.Onid_usuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_puesto", DbType="Int NOT NULL")]
		public int id_puesto
		{
			get
			{
				return this._id_puesto;
			}
			set
			{
				if ((this._id_puesto != value))
				{
					this.Onid_puestoChanging(value);
					this.SendPropertyChanging();
					this._id_puesto = value;
					this.SendPropertyChanged("id_puesto");
					this.Onid_puestoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
